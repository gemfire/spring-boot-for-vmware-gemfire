plugins {
    id 'java-library'
    id 'dependency-constraints'
    id 'gemfire-repo-artifact-publishing'
    id 'spring-java-jar'
}

description = "Spring Boot Starter for Spring Session using VMware GemFire"

project.ext.set("pomProjectLongName","Spring Boot Starter for Spring Session using VMware GemFire")
project.ext.set("pomProjectArtifactName","spring-gemfire-starter-session")
project.ext.set("pomProjectDescription",description)

dependencies {
  implementation(project(':spring-gemfire-starter'))
  implementation "org.springframework.geode:spring-geode-starter-session:$springBootDataGeodeVersion"
  testImplementation "org.springframework.geode:spring-geode-starter-test:$springBootDataGeodeVersion"
}

sourceSets {
  test {
    java {
      srcDir file('src/test/java')
      srcDir file('src/sbdg-test-read-only/java')
    }
    resources {
      srcDir file('src/test/resources')
      srcDir file('src/sbdg-test-read-only/resources')
    }
  }
}

task cleanSpringTestClasses(type: Exec)
{
  commandLine 'rm', '-rf', "${project.projectDir}/src/sbdg-test-read-only"
}

clean {
  dependsOn("cleanSpringTestClasses")
}

test {
  dependsOn(":spring-gemfire-starter:test")
}
