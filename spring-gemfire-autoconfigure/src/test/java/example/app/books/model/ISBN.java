/*
 * Copyright 2022-2024 Broadcom. All rights reserved.
 * SPDX-License-Identifier: Apache-2.0
 */
package example.app.books.model;

import java.util.UUID;

import org.springframework.util.Assert;

/**
 * The {@link ISBN} class is a Abstract Data Type (ADT) modeling either a {@link Book} ISBN-10 or ISBN-13 number.
 *
 * @author John Blum
 * @see java.lang.Comparable
 * @since 1.0.0
 */
@SuppressWarnings("unused")
public class ISBN implements Comparable<ISBN> {

	public static ISBN autoGenerated() {
		return of(UUID.randomUUID().toString());
	}

	public static ISBN of(String number) {

		Assert.hasText(number, String.format("Number [%s] is required", number));

		return new ISBN(number);
	}

	private String number;

	protected ISBN() { }

	private ISBN(String number) {
		this.number = number;
	}

	public String getNumber() {
		return this.number;
	}

	@Override
	public int compareTo(ISBN other) {
		return this.getNumber().compareTo(other.getNumber());
	}

	@Override
	public boolean equals(Object obj) {

		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ISBN)) {
			return false;
		}

		ISBN that = (ISBN) obj;

		return this.getNumber().equals(that.getNumber());
	}

	@Override
	public int hashCode() {

		int hashValue = 17;

		hashValue = 37 * hashValue + getNumber().hashCode();

		return hashValue;
	}

	@Override
	public String toString() {
		return getNumber();
	}
}
