plugins {
  id 'java-library'
  id 'dependency-constraints'
  id 'gemfire-repo-artifact-publishing'
  id 'spring-java-jar'
}

description = "Spring Boot Actuator for VMware GemFire"

project.ext.set("pomProjectLongName", description)
project.ext.set("pomProjectArtifactName", "spring-gemfire-actuator")
project.ext.set("pomProjectDescription", description)


dependencies {
    implementation project(":spring-gemfire")
    implementation "org.springframework.geode:spring-geode-actuator:$springBootDataGeodeVersion"

    implementation "org.springframework.boot:spring-boot-starter-actuator"

    runtimeOnly "com.vmware.gemfire:geode-logging"
    runtimeOnly "com.vmware.gemfire:geode-serialization"

    testImplementation "junit:junit"
    testImplementation "org.assertj:assertj-core"
    testImplementation "org.mockito:mockito-core"
    testImplementation "org.projectlombok:lombok"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.data:spring-data-geode-test"
    testImplementation "edu.umd.cs.mtc:multithreadedtc"

}

sourceSets{
    test{
        java{
            srcDir file('src/test/java')
            srcDir file('src/sbdg-test-read-only/java')
        }
        resources{
            srcDir file('src/test/resources')
            srcDir file('src/sbdg-test-read-only/resources')
        }
    }
}

task cleanSpringTestClasses(type:Exec)
{
    commandLine 'rm', '-rf', "${project.projectDir}/src/sbdg-test-read-only"
}

clean{
    dependsOn("cleanSpringTestClasses")
}

test{
    dependsOn(":spring-gemfire-starter:test")
}
