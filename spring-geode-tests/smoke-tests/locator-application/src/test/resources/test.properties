#
# Copyright 2023-2024 Broadcom. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#

# Test Properties used to configure Spring Boot and Apache Geode during test execution.

# Setting the following Apache Geode "internal" System property ("gemfire.Buffer.useHeapBuffers") because Apache Geode
# is not fully Java 17 compatible and leads to the following error:
# Caused by: java.lang.reflect.InaccessibleObjectException:
# Unable to make public java.lang.Object java.nio.DirectByteBuffer.attachment() accessible:
# module java.base does not "opens java.nio" to unnamed module @2e0fa5d3
#	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:354)
#	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:297)
#	at java.base/java.lang.reflect.Method.checkCanSetAccessible(Method.java:199)
#	at java.base/java.lang.reflect.Method.setAccessible(Method.java:193)
#	at org.apache.geode.internal.net.BufferPool.getPoolableBuffer(BufferPool.java:343)
#	... 69 more

# The gemfire.BufferPool.useHeapBuffers property should technically be true, but due to an Apache Geode bug,
# it is ignore entirely due to the first condition (#sigh); see https://issues.apache.org/jira/browse/GEODE-10035.
#system.gemfire.BufferPool.useHeapBuffers=true

# Use this (GemFire) System property instead (effects the "first condition").
system.p2p.nodirectBuffers=true
