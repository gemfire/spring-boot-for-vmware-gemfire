plugins {
  id 'java-library'
  id "io.freefair.lombok" version "5.3.0"
  id 'dependency-constraints'
  id 'gemfire-repo-artifact-publishing'
  id 'spring-java-jar'
}

description = "Spring GemFire base build for VMware GemFire"

project.ext.set("pomProjectLongName", description)
project.ext.set("pomProjectArtifactName", "spring-gemfire")
project.ext.set("pomProjectDescription",description)


dependencies {
    api project(':spring-gemfire-extensions')
    api("org.springframework.geode:spring-geode:$springBootDataGeodeVersion"){
        exclude group:"org.springframework.data", module:"spring-data-geode"
        exclude group:"org.springframework.geode", module:"apache-geode-extensions"
    }

    api "com.vmware.gemfire:spring-data-gemfire-$gemfireBaseVersion:$springDataTanzuGemFireVersion"

    compileOnly "com.google.code.findbugs:jsr305"

    runtimeOnly "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"

    testImplementation "org.springframework:spring-test"
    testImplementation "junit:junit"
    testImplementation "org.assertj:assertj-core"
    testImplementation "org.mockito:mockito-core"
    testImplementation "org.projectlombok:lombok"
    testImplementation "org.testcontainers:testcontainers"
    testImplementation "org.testcontainers:cassandra"
    testImplementation "edu.umd.cs.mtc:multithreadedtc"

    testImplementation("org.springframework.boot:spring-boot-starter-test:$springBootVersion") {
        exclude group: "org.skyscreamer", module: "jsonassert"
    }

    testImplementation "org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion"
    testImplementation "org.springframework.boot:spring-boot-starter-data-cassandra:$springBootVersion"
    testImplementation "org.springframework.data:spring-data-geode-test"

    testRuntimeOnly "org.hsqldb:hsqldb"
}

sourceSets{
    test{
        java{
            srcDir file('src/test/java')
            srcDir file('src/sbdg-test-read-only/java')
        }
        resources{
            srcDir file('src/test/resources')
            srcDir file('src/sbdg-test-read-only/resources')
        }
    }
}

task cleanSpringTestClasses(type:Exec)
{
    commandLine 'rm', '-rf', "${project.projectDir}/src/sbdg-test-read-only"
}

clean{
    dependsOn("cleanSpringTestClasses")
}

test{
    dependsOn(":spring-gemfire-starter:test")
}
