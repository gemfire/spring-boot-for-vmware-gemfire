plugins {
    id 'java-library'
    id 'dependency-constraints'
    id 'gemfire-repo-artifact-publishing'
}

description = "Spring Boot Auto-Configuration for VMware GemFire"

project.ext.set("pomProjectLongName","Spring Boot Auto-Configure for VMware GemFire")
project.ext.set("pomProjectArtifactName","spring-boot-3.0-gemfire-actuator-autoconfigure-${gemfireBaseVersion}")
project.ext.set("pomProjectDescription",description)

description = "Spring Boot Actuator Auto-Configuration for VMware GemFire"

java {
    withJavadocJar()
    withSourcesJar()
}

javadoc{
    failOnError=false
}

dependencies {
    api project(":spring-gemfire-actuator")
    api project(":spring-gemfire-autoconfigure")

    compileOnly "com.vmware.gemfire:gemfire-core:$gemfireVersion"
    compileOnly "com.google.code.findbugs:jsr305:$findbugsVersion"

    testImplementation "com.vmware.gemfire:gemfire-core:$gemfireVersion"
    testImplementation "junit:junit"
    testImplementation "org.assertj:assertj-core"
    testImplementation "org.mockito:mockito-core"
    testImplementation "org.projectlombok:lombok"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation ("com.vmware.gemfire:spring-test-gemfire-9.15-3.0")
    testImplementation "edu.umd.cs.mtc:multithreadedtc"

}

repositories {
    def additionalMavenRepoURLs = project.ext.get('additionalMavenRepoURLs')
    if (!additionalMavenRepoURLs.isEmpty() && !additionalMavenRepoURLs.isBlank()) {
        additionalMavenRepoURLs.split(",").each {
            project.getRepositories()
                    .maven(mavenRepository -> {
                        mavenRepository.setUrl(uri(it.toString()));
                    });
        }
    }
}
