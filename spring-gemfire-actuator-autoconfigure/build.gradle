plugins {
    id 'java-library'
    id 'dependency-constraints'
    id 'gemfire-repo-artifact-publishing'
    id 'spring-java-jar'
}

description = "Spring Boot Auto-Configuration for VMware GemFire"

project.ext.set("pomProjectLongName","Spring Boot Auto-Configure for VMware GemFire")
project.ext.set("pomProjectArtifactName","spring-gemfire-actuator-autoconfigure")
project.ext.set("pomProjectDescription",description)

description = "Spring Boot Actuator Auto-Configuration for VMware GemFire"

dependencies {
    implementation project(":spring-gemfire-actuator")
    implementation project(":spring-gemfire-autoconfigure")
    implementation "org.springframework.geode:spring-geode-actuator-autoconfigure:$springBootDataGeodeVersion"

    compileOnly "com.google.code.findbugs:jsr305:$findbugsVersion"

    testImplementation "junit:junit"
    testImplementation "org.assertj:assertj-core"
    testImplementation "org.mockito:mockito-core"
    testImplementation "org.projectlombok:lombok"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.data:spring-data-geode-test"
    testImplementation "edu.umd.cs.mtc:multithreadedtc"

}

sourceSets{
    test{
        java{
            srcDir file('src/test/java')
            srcDir file('src/sbdg-test-read-only/java')
        }
        resources{
            srcDir file('src/test/resources')
            srcDir file('src/sbdg-test-read-only/resources')
        }
    }
}

task cleanSpringTestClasses(type:Exec)
{
    commandLine 'rm', '-rf', "${project.projectDir}/src/sbdg-test-read-only"
}

clean{
    dependsOn("cleanSpringTestClasses")
}

test{
    dependsOn(":spring-gemfire-starter:test")
}
