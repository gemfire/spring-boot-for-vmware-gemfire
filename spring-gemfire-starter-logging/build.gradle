plugins {
    id 'java-library'
    id 'dependency-constraints'
    id 'gemfire-repo-artifact-publishing'
    id 'spring-java-jar'
}

project.ext.set("pomProjectLongName","Spring Boot Logging Starter for VMware GemFire")
project.ext.set("pomProjectArtifactName","spring-gemfire-starter-logging")
project.ext.set("pomProjectDescription","Spring Boot Logging Starter for VMware GemFire with Logback as the logging provider and adaptation of Log4j to SLF4J")


dependencies {
  implementation "org.springframework.geode:spring-geode-starter-logging:$springBootDataGeodeVersion"
  testImplementation "org.springframework.geode:spring-geode-starter-test:$springBootDataGeodeVersion"
}

sourceSets {
  test {
    java {
      srcDir file('src/test/java')
      srcDir file('src/sbdg-test-read-only/java')
    }
    resources {
      srcDir file('src/test/resources')
      srcDir file('src/sbdg-test-read-only/resources')
    }
  }
}

task cleanSpringTestClasses(type: Exec)
{
  commandLine 'rm', '-rf', "${project.projectDir}/src/sbdg-test-read-only"
}

clean {
  dependsOn("cleanSpringTestClasses")
}

test {
  dependsOn(":spring-gemfire-starter:test")
}

repositories {
    mavenLocal()
    mavenCentral()

    if (version.contains('-')) {
        maven { url "https://repo.spring.io/milestone" }
    }
    if (version.endsWith('-SNAPSHOT')) {
        maven { url "https://repo.spring.io/snapshot" }
    }
    maven {
        url "gcs://gemfire-build-resources/maven/gemfire"
    }

    maven {
        url "https://maven.apachegeode-ci.info/snapshots"
    }

    maven {
        credentials {
            username "$gemfireRepoUsername"
            password "$gemfireRepoPassword"
        }
        url = uri("https://commercial-repo.pivotal.io/data3/gemfire-release-repo/gemfire")
    }
}
