plugins {
  id 'java-library'
  id 'dependency-constraints'
  id 'gemfire-repo-artifact-publishing'
  id 'spring-java-jar'
}

description = "Spring Boot for VMware GemFire Extensions"

project.ext.set("pomProjectLongName",description)
project.ext.set("pomProjectArtifactName","spring-gemfire-autoconfigure")
project.ext.set("pomProjectDescription",description)


dependencies {
  api("org.springframework.geode:apache-geode-extensions:$springBootDataGeodeVersion"){
    exclude group: 'org.apache.geode', module: 'geode-core'
    exclude group: 'org.apache.geode', module: 'geode-cq'
    exclude group: 'org.apache.geode', module: 'geode-lucene'
    exclude group: 'org.apache.geode', module: 'geode-wan'
  }
  api(platform("com.vmware.gemfire:gemfire-server-bom:$gemfireVersion")) {
    exclude group: 'org.apache.geode', module: 'geode-log4j'
  }

  implementation "com.fasterxml.jackson.core:jackson-databind"

  testImplementation "com.vmware.gemfire:geode-membership"
  testImplementation "junit:junit"
  testImplementation "org.assertj:assertj-core"
  testImplementation "org.mockito:mockito-core"
  testImplementation "org.projectlombok:lombok"
  testImplementation "edu.umd.cs.mtc:multithreadedtc:$multithreadedtcVersion"
}

sourceSets {
  test {
    java {
      srcDir file('src/test/java')
      srcDir file('src/sbdg-test-read-only/java')
    }
    resources {
      srcDir file('src/test/resources')
      srcDir file('src/sbdg-test-read-only/resources')
    }
  }
}

task cleanSpringTestClasses(type:Exec)
{
  commandLine 'rm', '-rf', "${project.projectDir}/src/sbdg-test-read-only"
}

clean{
  dependsOn("cleanSpringTestClasses")
}

test{
  dependsOn(":spring-gemfire-starter:test")
}
