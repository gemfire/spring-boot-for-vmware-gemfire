plugins {
  id 'java-library'
  id 'dependency-constraints'
  id 'gemfire-repo-artifact-publishing'
  id 'spring-java-jar'
}

description = "Spring Boot for VMware GemFire Extensions"

project.ext.set("pomProjectLongName",description)
project.ext.set("pomProjectArtifactName","spring-boot-2.7-gemfire-extensions-${gemfireBaseVersion}")
project.ext.set("pomProjectDescription",description)

java {
  withJavadocJar()
  withSourcesJar()
}

javadoc{
  failOnError=false
}

dependencies {
  api "com.vmware.gemfire:gemfire-core:${gemfireVersion}"
  api "com.vmware.gemfire:gemfire-cq:${gemfireVersion}"
  api "com.vmware.gemfire:gemfire-wan:${gemfireVersion}"

  implementation "com.fasterxml.jackson.core:jackson-databind"

  testImplementation "com.vmware.gemfire:gemfire-membership:${gemfireVersion}"
  testImplementation "junit:junit"
  testImplementation "org.assertj:assertj-core"
  testImplementation "org.mockito:mockito-core"
  testImplementation "org.projectlombok:lombok"
  testImplementation "edu.umd.cs.mtc:multithreadedtc:$multithreadedtcVersion"
}

repositories {
  def additionalMavenRepoURLs = project.ext.get('additionalMavenRepoURLs')
  if (!additionalMavenRepoURLs.isEmpty() && !additionalMavenRepoURLs.isBlank()) {
    additionalMavenRepoURLs.split(",").each {
      project.getRepositories()
              .maven(mavenRepository -> {
                mavenRepository.setUrl(uri(it.toString()));
              });
    }
  }
}
